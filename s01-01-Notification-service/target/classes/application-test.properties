#Cache Props
spring.cache.type=redis
#spring.cache.redis.time-to-live=60000
spring.data.redis.host=localhost
spring.data.redis.port=6379
spring.data.redis.password=redis123
#spring.data.redis.timeout=60000
#Database Props
#DB
spring.datasource.url=jdbc:mysql://localhost:3306/uamdb
spring.datasource.username=root
spring.datasource.password=Root1234
#Datasource
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.minimum-idle=10
spring.datasource.hikari.maximum-pool-size=1000
spring.datasource.hikari.idle-timeout=10000
spring.datasource.hikari.max-lifetime=1000
#H2
spring.h2.console.enabled=true
#Hibernate
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.show-sql=true
#spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy

spring.jpa.hibernate.ddl-auto=create



#Email SMTP
spring.mail.host=sandbox.smtp.mailtrap.io
spring.mail.port=2525
spring.mail.username=808086f39d9e45
spring.mail.password=03825a0acd4d0c
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true


# Kafka broker
spring.kafka.bootstrap-servers=localhost:9093

# Consumer settings
spring.kafka.consumer.group-id=notification-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer

# Allow deserialization of all custom DTOs (trusted package)
#spring.kafka.consumer.properties.spring.json.trusted.packages=*

spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=com.cv.s0101notificationservice.dto
spring.kafka.consumer.properties.spring.json.value.default.type=com.cv.s0101notificationservice.dto.GeneralNotificationDto
spring.kafka.consumer.properties.spring.json.use.type.headers=false


